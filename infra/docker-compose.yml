version: "3.9"

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: foodgram
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5

  backend:
    image: scorpdestory/foodgram-back:latest
    restart: always
    command: >
      sh -c "
        python manage.py migrate --noinput &&
        python manage.py load_ingredients &&
        python manage.py collectstatic --noinput &&
        gunicorn foodgram_backend.wsgi:application --bind 0.0.0.0:8000
      "
    environment:
      SECRET_KEY: django-insecure-...your-secret-key...
      DEBUG: "False"
      DATABASE_URL: postgres://postgres:postgres@db:5432/foodgram
      ALLOWED_HOSTS: localhost,127.0.0.1
    volumes:
      - media_data:/app/media          
      - static_data:/app/static        
      - ../data:/data:ro               
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8000"

  frontend:
    image: scorpdestory/foodgram-front:latest
    entrypoint: >
      sh -c "cp -a /usr/share/nginx/html/. /static && echo 'SPA copied';"
    volumes:
      - static_site:/static
    depends_on:
      - backend
    restart: "no"

  nginx:
    image: nginx:1.25.4-alpine
    container_name: foodgram-proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro    
      - static_site:/usr/share/nginx/html:ro              
      - static_data:/usr/share/nginx/html/static:ro             
      - media_data:/media-data:ro       
      - ../docs:/docs:ro                  
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  media_data:
  static_data:
  static_site:
